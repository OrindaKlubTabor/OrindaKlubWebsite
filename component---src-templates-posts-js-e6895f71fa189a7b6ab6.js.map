{"version":3,"file":"component---src-templates-posts-js-e6895f71fa189a7b6ab6.js","mappings":"0PAIsC,IAEjBA,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAmG1B,OAnG0BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC3BC,OAAA,WACE,MAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,OAC1C,YAAEC,EAAW,SAAEC,GAAaN,KAAKC,MAAMM,YACvCC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EACJL,EAAc,GAAM,EAAI,QAAU,UAAYA,EAAc,GAAGM,WAC3DC,EAAW,UAAYP,EAAc,GAAGM,WACxCE,EAAkBP,EAAW,EAAID,EAAc,EAAI,EAAII,EAAS,EAChEK,EAAgBR,EAAW,EAAID,EAAc,EAAIG,EAAUF,EACjE,OACES,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAACG,EAAAA,EAAM,CACLC,WAAW,oBACXC,YAAY,gFAEbrB,EAAMsB,IAAIC,GACTP,EAAAA,cAACQ,EAAAA,GAAI,CAACC,UAAU,YAAYC,GAAI,IAAIH,EAAKI,QACvCX,EAAAA,cAAA,OACES,UAAU,OACVG,MAAO,CAAEC,OAAQ,UACjBC,IAAKP,EAAKI,MAEVX,EAAAA,cAAA,MAAIY,MAAO,CAAEC,OAAQ,WAAaN,EAAKQ,OACvCf,EAAAA,cAAA,OAAKS,UAAU,kBACbT,EAAAA,cAAA,OAAKS,UAAU,uBACbT,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAASO,EAAKS,WAAmB,MAAIT,EAAKF,aAE5CL,EAAAA,cAACQ,EAAAA,GAAI,CACHC,UAAU,2BACVC,GAAI,IAAIH,EAAKI,QACd,yBAKgB,MAAlBJ,EAAKU,WACJjB,EAAAA,cAAA,OACEkB,IAAKX,EAAKU,UAAUE,KAAKC,IACzBC,IAAKd,EAAKQ,MACVH,MAAO,CAAEU,SAAU,IAAKC,OAAQ,cAO5CvB,EAAAA,cAAA,OAAKY,MAAO,CAAEY,QAAS,OAAQC,eAAgB,kBAC5ChC,EACCO,EAAAA,cAAA,QAAMY,MAAO,CAAEc,MAAO,gBAAiB,eAEvC1B,EAAAA,cAACQ,EAAAA,GAAI,CAACE,GAAIf,EAAUgC,IAAI,QAAO,eAIjC3B,EAAAA,cAAA,WACG4B,MAAMC,KACL,CAAEC,OAAQvC,GACV,CAACwC,EAAGC,IACFlC,GAAmBkC,GACnBjC,EAAgBiC,IACf1C,IAAgB0C,EAAI,EACnBhC,EAAAA,cAACQ,EAAAA,GAAI,CACHI,MAAO,CACLqB,QAAS,SACTC,gBAAiB,UACjBR,MAAO,OACPS,aAAc,GAEhBrB,IAAK,oBAAoBkB,EAAI,IAC7BtB,GAAI,IAAS,IAANsB,EAAU,QAAU,UAAYA,EAAI,KAE1CA,EAAI,GAGPhC,EAAAA,cAACQ,EAAAA,GAAI,CACHI,MAAO,CAAEqB,QAAS,UAClBnB,IAAK,oBAAoBkB,EAAI,IAC7BtB,GAAI,IAAS,IAANsB,EAAU,QAAU,UAAYA,EAAI,KAE1CA,EAAI,MAKdtC,EACCM,EAAAA,cAAA,QAAMY,MAAO,CAAEc,MAAO,gBAAiB,WAEvC1B,EAAAA,cAACQ,EAAAA,GAAI,CAACE,GAAIb,EAAU8B,IAAI,QAAO,aAQ3C,EAAClD,CAAA,CAnG0B,CAASuB,EAAAA,U,+ECHvB,SAASG,EAAOjB,GAC7B,OACEc,EAAAA,cAAA,WACEA,EAAAA,cAACoC,EAAAA,EAAM,KACLpC,EAAAA,cAAA,aAAQd,EAAMkB,WAAW,wBACzBJ,EAAAA,cAAA,QAAMqC,KAAK,cAAcC,QAASpD,EAAMmB,eAE1CL,EAAAA,cAAA,UAAKd,EAAMkB,YAGjB,C","sources":["webpack://gatsby-starter-hello-world/./src/templates/posts.js","webpack://gatsby-starter-hello-world/./src/components/header.js"],"sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Container from \"../components/container\"\nimport Header from \"../components/header\"\nimport { graphql, Link } from \"gatsby\"\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allContentfulPost.nodes\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage - 1 === 1 ? \"/blog\" : \"/blog/\" + (currentPage - 1).toString()\n    const nextPage = \"/blog/\" + (currentPage + 1).toString()\n    const startCountIndex = numPages > 5 ? currentPage - 2 - 1 - isLast : 0\n    const endCountIndex = numPages > 5 ? currentPage + 2 + isFirst : numPages\n    return (\n      <Layout>\n        <Container>\n          <Header\n            headerText=\"Všechny příspěvky\"\n            description=\"Co se v Orinda Klubu děje přávě nového? Přečti si naše články a buď u toho.\"\n          ></Header>\n          {posts.map(node => (\n            <Link className=\"post-link\" to={`/${node.slug}`}>\n              <div\n                className=\"post\"\n                style={{ margin: \"3rem 0\" }}\n                key={node.slug}\n              >\n                <h2 style={{ margin: \"1rem 0\" }}>{node.title}</h2>\n                <div className=\"post-container\">\n                  <div className=\"post-text-container\">\n                    <p>\n                      <strong>{node.createdAt}</strong> • {node.description}\n                    </p>\n                    <Link\n                      className=\"post-link link-important\"\n                      to={`/${node.slug}`}\n                    >\n                      Zobrazit příspěvek &#8594;\n                    </Link>\n                  </div>\n\n                  {node.thumbnail != null && (\n                    <img\n                      src={node.thumbnail.file.url}\n                      alt={node.title}\n                      style={{ maxWidth: 200, height: \"auto\" }}\n                    />\n                  )}\n                </div>\n              </div>\n            </Link>\n          ))}\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {isFirst ? (\n              <span style={{ color: \"transparent\" }}>← Předchozí</span>\n            ) : (\n              <Link to={prevPage} rel=\"prev\">\n                ← Předchozí\n              </Link>\n            )}\n            <div>\n              {Array.from(\n                { length: numPages },\n                (_, i) =>\n                  startCountIndex <= i &&\n                  endCountIndex > i &&\n                  (currentPage === i + 1 ? (\n                    <Link\n                      style={{\n                        padding: \"0 10px\",\n                        backgroundColor: \"#002868\",\n                        color: \"#fff\",\n                        borderRadius: 5,\n                      }}\n                      key={`pagination-number${i + 1}`}\n                      to={`${i === 0 ? \"/blog\" : \"/blog/\" + (i + 1)}`}\n                    >\n                      {i + 1}\n                    </Link>\n                  ) : (\n                    <Link\n                      style={{ padding: \"0 10px\" }}\n                      key={`pagination-number${i + 1}`}\n                      to={`${i === 0 ? \"/blog\" : \"/blog/\" + (i + 1)}`}\n                    >\n                      {i + 1}\n                    </Link>\n                  ))\n              )}\n            </div>\n            {isLast ? (\n              <span style={{ color: \"transparent\" }}>Další →</span>\n            ) : (\n              <Link to={nextPage} rel=\"next\">\n                Další →\n              </Link>\n            )}\n          </div>\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nexport const data = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allContentfulPost(\n      limit: $limit\n      skip: $skip\n      sort: { fields: createdAt, order: DESC }\n    ) {\n      nodes {\n        description\n        createdAt(formatString: \"D. MMMM YYYY\", locale: \"cs\")\n        slug\n        title\n        thumbnail {\n          file {\n            url\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nexport default function Header(props) {\n  return (\n    <div>\n      <Helmet>\n        <title>{props.headerText} - Orinda Klub Tábor</title>\n        <meta name=\"description\" content={props.description} />\n      </Helmet>\n      <h1>{props.headerText}</h1>\n    </div>\n  )\n}\n"],"names":["BlogList","_React$Component","apply","arguments","_inheritsLoose","prototype","render","posts","this","props","data","allContentfulPost","nodes","currentPage","numPages","pageContext","isFirst","isLast","prevPage","toString","nextPage","startCountIndex","endCountIndex","React","Layout","Container","Header","headerText","description","map","node","Link","className","to","slug","style","margin","key","title","createdAt","thumbnail","src","file","url","alt","maxWidth","height","display","justifyContent","color","rel","Array","from","length","_","i","padding","backgroundColor","borderRadius","Helmet","name","content"],"sourceRoot":""}